version: '3.8'

x-common-env: &common-env
  # --- Task Queue Configuration ---
  CELERY_BROKER_URL: redis://redis:6379/0
  CELERY_RESULT_BACKEND: redis://redis:6379/0
  
  # --- Storage Provider Configuration ---
  STORAGE_PROVIDER: "minio"  # "minio" for local development, "s3" for production
  
  # --- Common S3/MinIO Configuration ---
  AWS_ACCESS_KEY_ID: minioadmin
  AWS_SECRET_ACCESS_KEY: minioadmin
  AWS_REGION: ""  # Empty for MinIO to avoid signature issues
  AWS_S3_BUCKET: pdf-translator-bucket
  AWS_S3_USE_SSL: false
  
  # --- Environment-specific Endpoints ---
  # Internal endpoint (for operations like upload/download)
  AWS_S3_ENDPOINT_URL: http://minio:9000
  # Public endpoint (for presigned URLs accessible from frontend)
  AWS_S3_PUBLIC_ENDPOINT_URL: http://localhost:9000
  
  # --- Other Configuration ---
  TRANSLATED_TTL_DAYS: 7

services:
  frontend:
    build:
      context: ./pdf-translator
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:8000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./translated:/app/translated
    environment:
      <<: *common-env
      UPLOAD_FOLDER: /app/uploads
      TRANSLATED_FOLDER: /app/translated
    depends_on:
      - redis
      - minio

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - ./uploads:/app/uploads
      - ./translated:/app/translated
    environment:
      <<: *common-env
      TRANSLATED_FOLDER: /app/translated
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - redis
      - minio

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s

volumes:
  minio_data:

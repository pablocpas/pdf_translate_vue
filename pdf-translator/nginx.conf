upstream backend {
    server backend:8000;
}

upstream minio {
    server minio:9000;
}

server {
    listen 80;
    server_name _;
    client_max_body_size 50M;

    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # API requests
    location /api/ {
        proxy_pass http://backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
    }

       location /minio/ {
        # Reescribe la URL para quitar el prefijo /minio/
        rewrite ^/minio/(.*)$ /$1 break;

        # Pasa la petición al upstream de MinIO
        proxy_pass http://minio;

        # --- LA CORRECCIÓN CLAVE ---
        # Establece el Host al del upstream, no al del cliente.
        # MinIO necesita recibir el host con el que se identifica internamente.
        proxy_set_header Host $proxy_host; 
        # Alternativamente, puedes ponerlo explícitamente: proxy_set_header Host "minio:9000";

        # Cabeceras estándar para proxy
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Para GETs prefirmados, no es necesario pasar las cabeceras de autenticación
        # ya que la autenticación está en los parámetros de la URL.
        # proxy_set_header X-Amz-Content-Sha256 ... (innecesario)
        # proxy_set_header Authorization ... (innecesario)

        # Configuraciones de compatibilidad con S3
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
    }
}
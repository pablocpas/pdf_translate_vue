upstream backend {
    server backend:8000;
}

upstream minio {
    server minio:9000;
}

server {
    listen 80;
    server_name _;
    client_max_body_size 50M;

    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # API requests
    location /api/ {
        proxy_pass http://backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
    }

    location /minio/ {
        # Esta directiva es CRUCIAL. Quita el prefijo /minio/
        # antes de pasarlo al backend.
        rewrite ^/minio/(.*)$ /$1 break;

        # Apunta directamente al servicio y puerto de MinIO.
        # Esto es más explícito que usar un upstream para depurar.
        proxy_pass http://minio:9000/;

        # --- ESTA ES LA LÍNEA MÁS IMPORTANTE ---
        # La firma de la URL se calculó esperando un Host "minio:9000"
        # (como vimos en la prueba de curl). Debemos asegurarnos de que
        # Nginx envía exactamente esa cabecera a MinIO.
        proxy_set_header Host "minio:9000";

        # Cabeceras estándar para que el backend sepa del cliente original.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuraciones de compatibilidad recomendadas para S3
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
    }
}